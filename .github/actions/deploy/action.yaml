# name: Deploy App to Cloud Run

description: 'Deploy App to Cloud Run'
inputs:
  training-image-base-name:
    type: string 
    required: true
    description: "App Image tag to use"
  gcp-project:
    type: string
    required: true
  image-tag:
    type: string
    required: true
  GCP_SA_KEY:
    type: string
    required: true


name: Deploy ML Script

runs:
  using: "composite"
  steps:
    - name: Check out code in app directory
      uses: actions/checkout@v3

    - name: Auth against GCP
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ inputs.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    - name: Authorize Docker push
      shell: bash
      run:  |
        gcloud auth configure-docker us-central1-docker.pkg.dev --project ${{ inputs.gcp-project }}

    - name: Get new staging and latest staging ML container names
      id: set-training-image-var
      shell: bash
      run: |
        echo "image-uri=${{ inputs.training-image-base-name }}:${{ inputs.image-tag }}" >> $GITHUB_OUTPUT
        echo "image-latest-uri=${{ inputs.training-image-base-name }}:latest" >> $GITHUB_OUTPUT

    - name: Rename temp, tested staging ML container and push to staging Artifact Registry
      env:
        gcp_project_id: staging-cloud-web-app
      shell: bash
      run: |
        docker pull ${{ inputs.training-image-base-name }}
        docker tag ${{ inputs.training-image-base-name }} ${{ steps.set-training-image-var.outputs.image-uri }}
        docker tag ${{ inputs.training-image-base-name }} ${{ steps.set-training-image-var.outputs.image-latest-uri }}
        docker push ${{ inputs.training-image-base-name }} --all-tags
